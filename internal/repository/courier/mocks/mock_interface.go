// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/courier/interface.go

// Package mock_courier is a generated GoMock package.
package mock_courier

import (
	context "context"
	reflect "reflect"
	dto "sss/internal/controllers/dto"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRepo) Create(ctx context.Context, cour *dto.CreateCourierRequest) ([]dto.CourierDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, cour)
	ret0, _ := ret[0].([]dto.CourierDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockRepoMockRecorder) Create(ctx, cour interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRepo)(nil).Create), ctx, cour)
}

// GetAll mocks base method.
func (m *MockRepo) GetAll(ctx context.Context, limit, offset int32) ([]dto.CourierDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx, limit, offset)
	ret0, _ := ret[0].([]dto.CourierDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockRepoMockRecorder) GetAll(ctx, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockRepo)(nil).GetAll), ctx, limit, offset)
}

// GetById mocks base method.
func (m *MockRepo) GetById(ctx context.Context, id int64) (*dto.CourierDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", ctx, id)
	ret0, _ := ret[0].(*dto.CourierDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockRepoMockRecorder) GetById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockRepo)(nil).GetById), ctx, id)
}

// GetMetaInf mocks base method.
func (m *MockRepo) GetMetaInf(ctx context.Context, id int, startDate, endDate time.Time) ([]int32, *dto.GetCourierMetaInfoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetaInf", ctx, id, startDate, endDate)
	ret0, _ := ret[0].([]int32)
	ret1, _ := ret[1].(*dto.GetCourierMetaInfoResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMetaInf indicates an expected call of GetMetaInf.
func (mr *MockRepoMockRecorder) GetMetaInf(ctx, id, startDate, endDate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetaInf", reflect.TypeOf((*MockRepo)(nil).GetMetaInf), ctx, id, startDate, endDate)
}
